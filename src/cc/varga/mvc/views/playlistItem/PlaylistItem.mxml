<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/halo" 
		 xmlns:controller="cc.varga.mvc.views.playlisturl.controller.*">
	
	<fx:Script>
		<![CDATA[
			import cc.varga.mvc.events.playlist.controller.PlaylistControllerEvent;
			
			import com.adobe.serialization.json.JSON;
			
			import mx.rpc.events.ResultEvent;
			import mx.rpc.http.mxml.HTTPService;
			
			[Bindable]
			private var content : Object;
			
			[Bindable]
			private var _artist : String;
			
			public function set state(value : String):void{
				this.currentState = value;
			}
			
			public function set jsonObj(value : Object):void{
				content = value;
				getArtist();
			}
			
			public function get jsonObj():Object{
				return content;
			}
			
			private function getArtist():void{
				if (content['written_by'] && content['written_by'].length > 0) {
					var http:HTTPService = new HTTPService();
					http.addEventListener(ResultEvent.RESULT, onResult);
					http.url = String("http://aludose/" + content['written_by'][0]);
					
					http.send();
				}
			}
			
			private function onResult(event : ResultEvent):void{
				var obj	= JSON.decode(event.result as String);
				_artist = obj["name"];
			}
			
			
			protected function addToPlaylist_clickHandler(event:MouseEvent):void
			{
				dispatchEvent( new PlaylistControllerEvent( PlaylistControllerEvent.ADD_TO_PLAYLIST, jsonObj) );
			}
			
			
			protected function play_clickHandler(event:MouseEvent):void
			{
				dispatchEvent( new PlaylistControllerEvent( PlaylistControllerEvent.PLAY_THIS_ITEM, new Object()) );
			}
			
			
			protected function remove_clickHandler(event:MouseEvent):void
			{
				dispatchEvent( new PlaylistControllerEvent( PlaylistControllerEvent.REMOVE_THIS_ITEM, new Object()) );
			}
			
			protected function download_clickHandler(event:MouseEvent):void
			{
				dispatchEvent( new PlaylistControllerEvent( PlaylistControllerEvent.DOWNLOAD, new Object()) );
			}
		]]>
	</fx:Script>
	
	<s:states>
		<s:State name="blip" />
		<s:State name="youtube" />
		<s:State name="network" />
		<s:State name="play" />
	</s:states>
	
	<s:layout><s:HorizontalLayout/></s:layout>

	<s:Group>
		<s:layout><s:HorizontalLayout/></s:layout>
		<s:Label id="artist" text="{this._artist}"  width="100%" minWidth="50"/>
		<s:Label id="title" text="{this.content['title']}"  width="100%" minWidth="50"/>
		<s:Label id="url" text="{this.content['source']}"  width="100%"/>
	</s:Group>
	<s:Group width="100%" height="50">
		<mx:ApplicationControlBar>
			<s:Button id="addToPlaylist" label="Add To Playlist" click="addToPlaylist_clickHandler(event)" />
			<s:Button id="play" label="Play" click="play_clickHandler(event)" />
			<s:Button id="download" label="Download" click="download_clickHandler(event)" />
		</mx:ApplicationControlBar>
	</s:Group>
	
</s:Group>

